[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies" ;preferScala2;*/*:dumpStructureTo C:/Users/guptas76/AppData/Local/Temp/sbt-structure1.xml; session clear-all ; set ideaPort in Global := 62535, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_431)
[debug] Load.defaultLoad until apply took 9.9951ms
[debug]           Load.loadUnit: plugins took 16.5438ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\IJ\kafka-scala-project\project
[debug]             Load.loadUnit: mkEval took 0.1629ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\IJ\kafka-scala-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.511 ms
[info] loading settings for project kafka-scala-project-build from assembly.sbt,plugins.sbt,idea3607.sbt ...
[debug]               Load.resolveProject(kafka-scala-project-build) took 1.1046ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kafka-scala-project-build, base: C:\IJ\kafka-scala-project\project, plugins: List(<none>))) took 1.8046ms
[debug] [Loading] Done in C:\IJ\kafka-scala-project\project, returning: (kafka-scala-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 25.506ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.0216ms
[debug]         Load.loadUnit(file:/C:/IJ/kafka-scala-project/project/, ...) took 43.3396ms
[debug]       Load.apply: load took 43.9504ms
[debug]       Load.apply: resolveProjects took 0.0662ms
[debug]       Load.apply: finalTransforms took 4.159ms
[debug]       Load.apply: config.delegates took 0.1969ms
[debug]       Load.apply: Def.make(settings)... took 20.3951ms
[debug]       Load.apply: structureIndex took 5.4022ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from C:\IJ\kafka-scala-project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 291.6553ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\IJ\kafka-scala-project
[debug]       Load.loadUnit: mkEval took 0.21ms
[debug] [Loading] Found root project root w/ remaining flinkApp
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.9451 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.2681ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\IJ\kafka-scala-project, plugins: List(<none>))) took 24.52ms
[debug] [Loading] Loading project flinkApp @ C:\IJ\kafka-scala-project\flinkApp
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.508 ms
[debug]       Load.resolveProject(flinkApp) took 0.5385ms
[debug] [Loading] Done in C:\IJ\kafka-scala-project, returning: (root, flinkApp)
[debug]     Load.loadUnit: loadedProjectsRaw took 614.4649ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.1174ms
[debug]   Load.loadUnit(file:/C:/IJ/kafka-scala-project/, ...) took 915.4269ms
[debug] Load.apply: load took 916.6517ms
[debug] Load.apply: resolveProjects took 0.0649ms
[debug] Load.apply: finalTransforms took 13.6718ms
[debug] Load.apply: config.delegates took 0.1841ms
[debug] Load.apply: Def.make(settings)... took 54.2707ms
[debug] Load.apply: structureIndex took 15.8433ms
[debug] Load.apply: mkStreams took 0.0031ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to FlinkKafkaApp (in build file:/C:/IJ/kafka-scala-project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to FlinkKafkaApp (in build file:/C:/IJ/kafka-scala-project/)
[debug] > Exec(preferScala2, None, None)
[debug] > Exec(*/*:dumpStructureTo C:/Users/guptas76/AppData/Local/Temp/sbt-structure1.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[info] Writing structure to C:\Users\guptas76\AppData\Local\Temp\sbt-structure1.xml...
[info] Done.
[success] Total time: 12 s, completed 10 Jan, 2025 7:22:12 PM
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to FlinkKafkaApp (in build file:/C:/IJ/kafka-scala-project/)
[debug] > Exec(set ideaPort in Global := 62535, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile and 1 others.
[info] 	Run `last` for details.
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[debug] 	flinkApp / Compile / compile
[debug] 	flinkApp / Test / compile
[info] Reapplying settings...
[info] set current project to FlinkKafkaApp (in build file:/C:/IJ/kafka-scala-project/)
[debug] > Exec(idea-shell, None, None)
